openapi: 3.0.0
servers:
  - description: Cluster Endpoint
    url: /api
info:
  description: MedCare system API
  version: "1.0.0"
  title: MedCare API
  contact:
    email: <your_email>
  license:
    name: CC BY 4.0
    url: "https://creativecommons.org/licenses/by/4.0/"
tags:
  - name: medicalRecords
    description: Medical Records API
  - name: vaccinationRecords
    description: Vaccination Records API
  - name: labResults
    description: Lab Results API
  - name: allergyRecords
    description: Allergy Records API

paths:
  /medical-records:
    get:
      tags:
        - medicalRecords
      summary: Get all medical records
      operationId: getAllMedicalRecords
      description: Retrieve all medical records
      responses:
        "200":
          description: List of medical records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MedicalRecord"
    post:
      tags:
        - medicalRecords
      summary: Create a new medical record
      operationId: createMedicalRecord
      description: Add a new medical record
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MedicalRecord"
      responses:
        "201":
          description: Medical record created
        "400":
          description: Invalid input
  /medical-records/{recordId}:
    parameters:
      - in: path
        name: recordId
        required: true
        schema:
          type: string
    get:
      tags:
        - medicalRecords
      summary: Get medical record by ID
      operationId: getMedicalRecordById
      description: Retrieve a specific medical record by its ID
      responses:
        "200":
          description: Medical record details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MedicalRecord"
        "404":
          description: Medical record not found
    put:
      tags:
        - medicalRecords
      summary: Update a medical record
      operationId: updateMedicalRecord
      description: Update a specific medical record by its ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MedicalRecord"
      responses:
        "200":
          description: Medical record updated
        "400":
          description: Invalid input
        "404":
          description: Medical record not found
    delete:
      tags:
        - medicalRecords
      summary: Delete a medical record
      operationId: deleteMedicalRecord
      description: Remove a specific medical record by its ID
      responses:
        "204":
          description: Medical record deleted
        "404":
          description: Medical record not found

  /vaccination-records:
    get:
      tags:
        - vaccinationRecords
      summary: Get all vaccination records
      operationId: getAllVaccinationRecords
      description: Retrieve all vaccination records
      responses:
        "200":
          description: List of vaccination records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VaccinationRecord"
    post:
      tags:
        - vaccinationRecords
      summary: Create a new vaccination record
      operationId: createVaccinationRecord
      description: Add a new vaccination record
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaccinationRecord"
      responses:
        "201":
          description: Vaccination record created
        "400":
          description: Invalid input
  /vaccination-records/{recordId}:
    parameters:
      - in: path
        name: recordId
        required: true
        schema:
          type: string
    get:
      tags:
        - vaccinationRecords
      summary: Get vaccination record by ID
      operationId: getVaccinationRecordById
      description: Retrieve a specific vaccination record by its ID
      responses:
        "200":
          description: Vaccination record details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaccinationRecord"
        "404":
          description: Vaccination record not found
    put:
      tags:
        - vaccinationRecords
      summary: Update a vaccination record
      operationId: updateVaccinationRecord
      description: Update a specific vaccination record by its ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaccinationRecord"
      responses:
        "200":
          description: Vaccination record updated
        "400":
          description: Invalid input
        "404":
          description: Vaccination record not found
    delete:
      tags:
        - vaccinationRecords
      summary: Delete a vaccination record
      operationId: deleteVaccinationRecord
      description: Remove a specific vaccination record by its ID
      responses:
        "204":
          description: Vaccination record deleted
        "404":
          description: Vaccination record not found

  /lab-results:
    get:
      tags:
        - labResults
      summary: Get all lab results
      operationId: getAllLabResults
      description: Retrieve all lab results
      responses:
        "200":
          description: List of lab results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LabResult"
  /lab-results/{resultId}:
    parameters:
      - in: path
        name: resultId
        required: true
        schema:
          type: string
    get:
      tags:
        - labResults
      summary: Get lab result by ID
      operationId: getLabResultById
      description: Retrieve a specific lab result by its ID
      responses:
        "200":
          description: Lab result details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LabResult"
        "404":
          description: Lab result not found
    put:
      tags:
        - labResults
      summary: Update a lab result
      operationId: updateLabResult
      description: Update a specific lab result by its ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabResult"
      responses:
        "200":
          description: Lab result updated
        "400":
          description: Invalid input
        "404":
          description: Lab result not found
    delete:
      tags:
        - labResults
      summary: Delete a lab result
      operationId: deleteLabResult
      description: Remove a specific lab result by its ID
      responses:
        "204":
          description: Lab result deleted
        "404":
          description: Lab result not found

  /allergy-records:
    get:
      tags:
        - allergyRecords
      summary: Get all allergy records
      operationId: getAllAllergyRecords
      description: Retrieve all allergy records
      responses:
        "200":
          description: List of allergy records
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AllergyRecord"
    post:
      tags:
        - allergyRecords
      summary: Create a new allergy record
      operationId: createAllergyRecord
      description: Add a new allergy record
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AllergyRecord"
      responses:
        "201":
          description: Allergy record created
        "400":
          description: Invalid input
  /allergy-records/{recordId}:
    parameters:
      - in: path
        name: recordId
        required: true
        schema:
          type: string
    get:
      tags:
        - allergyRecords
      summary: Get allergy record by ID
      operationId: getAllergyRecordById
      description: Retrieve a specific allergy record by its ID
      responses:
        "200":
          description: Allergy record details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllergyRecord"
        "404":
          description: Allergy record not found
    delete:
      tags:
        - allergyRecords
      summary: Delete an allergy record
      operationId: deleteAllergyRecord
      description: Remove a specific allergy record by its ID
      responses:
        "204":
          description: Allergy record deleted
        "404":
          description: Allergy record not found

components:
  schemas:
    MedicalRecord:
      type: object
      required: [id, patientId, condition, treatment]
      properties:
        id:
          type: string
          example: x321ab3
          description: Unique id of the medical record
        patientId:
          type: string
          example: 460527-jozef-pucik
          description: Unique identifier of the patient
        condition:
          type: string
          example: Diabetes
        treatment:
          type: string
          example: Insulin
        history:
          type: string
          example: Long-term
    VaccinationRecord:
      type: object
      required: [id, patientId, vaccine, date]
      properties:
        id:
          type: string
          example: v123ab3
          description: Unique id of the vaccination record
        patientId:
          type: string
          example: 460527-jozef-pucik
          description: Unique identifier of the patient
        vaccine:
          type: string
          example: COVID-19
        date:
          type: string
          format: date
          example: "2024-01-15"
    LabResult:
      type: object
      required: [id, patientId, testType, result]
      properties:
        id:
          type: string
          example: l456ab3
          description: Unique id of the lab result
        patientId:
          type: string
          example: 460527-jozef-pucik
          description: Unique identifier of the patient
        testType:
          type: string
          example: Blood Test
        result:
          type: string
          example: Normal
    AllergyRecord:
      type: object
      required: [id, patientId, allergen]
      properties:
        id:
          type: string
          example: a789ab3
          description: Unique id of the allergy record
        patientId:
          type: string
          example: 460527-jozef-pucik
          description: Unique identifier of the patient
        allergen:
          type: string
          example: Peanuts
